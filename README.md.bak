.

🧱 Java Struts 2 CRUD Application (No Maven)

A simple CRUD (Create, Read, Update, Delete) web application built using Java EE, Struts 2 Framework, JSP, Servlets, and MySQL — fully developed in Eclipse IDE without Maven.

🚀 Features

Add, Edit, View, and Delete Items

Built with Struts 2 Framework (classic XML configuration)

Uses MySQL database for persistent storage

No Maven — only manual JAR configuration

Works on Tomcat 9 / 10

Fully runnable inside Eclipse

🏗️ Project Structure
struts2crud/
│
├── src/
│   └── com/example/action/ItemAction.java
│
├── WebContent/
│   ├── jsp/
│   │   ├── list.jsp
│   │   ├── add.jsp
│   │   └── edit.jsp
│   └── WEB-INF/
│       ├── web.xml
│       ├── struts.xml
│       └── lib/ (all required jars)
│
├── README.md
└── database.sql

🧩 Technologies Used
Layer	Technology
Front-End	JSP, HTML, CSS
Controller	Struts 2 Framework
Model	Java Beans, JDBC
Database	MySQL
Server	Apache Tomcat 9
IDE	Eclipse IDE for Enterprise Java Developers
⚙️ Prerequisites

Eclipse IDE (Enterprise edition)

Apache Tomcat 9 or 10 configured in Eclipse

MySQL Server + Workbench

JDK 8 – 17 (21 works too)

The following JARs in WEB-INF/lib/:

struts2-core-2.5.x.jar

xwork-core-2.5.x.jar

commons-fileupload-1.3.x.jar

commons-io-2.x.jar

freemarker-2.3.x.jar

ognl-3.1.x.jar

mysql-connector-j-8.x.jar

(All jars are available from the official Struts 2 binary distribution or Maven central.)

🗄️ Database Setup

Open MySQL Workbench and run:

CREATE DATABASE strutsdb;
USE strutsdb;

CREATE TABLE items (
  id INT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(100),
  price DOUBLE,
  quantity INT
);


Update your JDBC connection details inside ItemAction.java:

String url = "jdbc:mysql://localhost:3306/strutsdb";
String user = "root";
String password = "yourpassword";

🧰 Run in Eclipse

Import Project → “Existing Dynamic Web Project”

Add all JARs to WEB-INF/lib

Clean Project → Build Project

Run → Run on Server → Apache Tomcat 9

Visit:

http://localhost:8081/struts2crud/items

🔁 CRUD Operations
Action	URL / Form Action	JSP Page	Method in ItemAction.java
List Items	/items	list.jsp	list()
Add Item	/item-add	add.jsp	add()
Edit Item	/item-update	edit.jsp	update()
Delete Item	/item-delete	list.jsp	delete()
📸 Screenshots (optional)

(You can insert screenshots here later from your running app — e.g., list page, add page, update page.)

💬 Notes

struts.xml is placed inside WEB-INF/classes/ so Struts can detect it.

Each action method returns "success" mapped to the appropriate JSP.

Works entirely offline — no Maven or Gradle needed.

Tested on Tomcat 9 + JDK 17 and Windows 11.

🙌 Author

Satya Srinath

🌐 GitHub Profile

✉️ Email: satya srinath6 @gmail.com

Would you like me to include a database.sql sample and short JDBC code snippet for your ItemAction.java in the same README (for better GitHub visibility)?

10000 chars